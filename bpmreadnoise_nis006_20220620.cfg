instrument: NIRISS
author: Chris Willott
pedigree: 'INFLIGHT 04/19/2022 04/23/2022' 
useafter: '2022-01-01T00:00:00' 
#Give FPA temperature for reference file header because not in raw data file headers
fpa_temp: 39.03
description_readnoise: This is a readnoise reference file.---------------------------
history_readnoise: Created with makebpmreadnoise.py
description_mask: This is a bad pixel mask reference file.---------------------------
history_mask: Created with makebpmreadnoise.py

#Raw data directory containing the full-frame NISRAPID darks
rawdir: /home/user/darks/allffnisrapid/raw

#Location of output files 
outdir: /home/user/darks/codeoutput_20220620

#Root filename of output reference files
rootreadnoise: jwst_niriss_com_nisrapid_readnoise
rootbpm: jwst_niriss_com_bpm

#Analysis on the darks takes the longest time. If only illuminated or linearity files have changed since the last run, set this to False. 
refinddarkbadpixels: False

#The linearity reference file has a DQ array with NONLINEAR pixels flagged. Don't need to include these as linearity step flags them in science obs DQ.
#Deprecated. This will always be false as I am repurposing this bit in the mask for NO_SAT_CHECK
includelinearity: False

#Input reference files
#Superbias made from data at same temperature - the file named below will be generated by makesuperbias_jwst_reffiles.py if does not already exist
reffile_superbias: /home/user/crds_cache/references/jwst/niriss/jwst_niriss_superbias_0183.fits
#dark current made from data at same temperature - the file named below will be generated by makedarknoisefilesgdq.py if does not already exist
reffile_dark: /home/user/crds_cache/references/jwst/niriss/jwst_niriss_dark_0179.fits
#Any NIRISS GR150 grism flat field file - this must already exist
reffile_flat: /home/user/crds_cache/references/jwst/niriss/jwst_niriss_flat_0265.fits
#Linearity reference file - used for flagging NONLINEAR pixels and in running level 1 pipeline 
reffile_linearity: /home/user/crds_cache/references/jwst/niriss/jwst_niriss_linearity_0016.fits

#noise files are in units of ADU so need a value of gain to convert to electrons, however readnoise reference file will be in units of ADU.
#use 1.60 for now - might redo when get a better gain value
gain: 1.60

#Set threshold parameters that determine when a pixel is bad and the category
#Usable QE threshold 
thresh_lowqe: 0.6
#QE below which to flag as DEAD
thresh_dead: 0.05
#QE (normalized locally) of nearest 4 pixels to an open or RC pixel to flag as ADJ_OPEN
thresh_adjopen: 1.05
#QE (normalized locally) of nearest 4 pixels to an open or RC pixel to flag further 4 pixels as ADJ_OPEN
thresh_nearopen: 1.10
#Dark current above which to flag as HOT
thresh_hot: 0.5
#Dark current above which to flag as WARM (not marked as DO_NOT_USE)
thresh_warm: 0.1
#Dark current below which pixels are unusual and to flag as OTHER_BAD_PIXEL
thresh_cold: 0.004
#Bias level above which to flag as UNRELIABLE_BIAS
thresh_bias: 30000.0
#Variability in bias sigma above which to flag as UNRELIABLE_BIAS
thresh_bias_sigma: 2.0
#Dark slope noise factor times median above which to always flag as UNRELIABLE_SLOPE
thresh_slopenoise: 2.5
#Dark CDS noise factor times median above which to always flag as UNRELIABLE_DARK
thresh_cdsnoise: 2.5
#Dark slope noise factor times median above which to flag as UNRELIABLE_SLOPE for long exposures only
thresh_slopenoise_longonly: 1.8
#Dark CDS noise factor times median above which to flag as UNRELIABLE_DARK for short exposures only
thresh_cdsnoise_shortonly: 1.8
#Reference pixel noise factor times median above which to flag for all 
thresh_slopenoise_refpix: 1.5
thresh_cdsnoise_refpix: 1.5



##For passing to runDetector1_niriss_fullframedark.py to run JWST pipeline
#These are reference file locations; set to 'crds' if want to use the CRDS default. 
#Mask file should only contain bad ref pixels so doesn't impact good pixels that were only bad in previous runs
#Note the superbias and linearity files used by this script are defined earlier in this config file
reffile_bpm: /home/user/jwst_niriss_mask_0015_refpixonly.fits
reffile_saturation: crds
reffile_gain: crds

##For passing to makedarknoisefilesgqd.py
#The maximum fraction of exposures affected by jumps to classify the jumps as cosmic rays rather than noisy pixels (default=0.33)
fraction_maxcr: 0.33
#Number of iterations in iterative sigma clipping to exclude cosmic rays.
#If there are lots of cosmic rays use up to 20% of the number of input images.
#If no simulated cosmic rays use sigiters=3
sigiters_temp: 13
sigiters_final: 13


#Running RTS pixel finding takes the longest time. If don't care about categorizing RTS, set to False here.
runrtscheck: False

#Output a separate file for each type of bad pixel (useful for inspection and correlation); if required set to True. 
outputseparatefiles: True
